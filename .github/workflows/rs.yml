name: Rust Event Server

on:
  push:
    paths:
      - 'backend/**' # backend以下のディレクトリの変更があったとき
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      # - name: Build
      #   run: |
      #     cargo build --verbose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          tags: ${{ secrets.DOCKER_USERNAME }}/avocado-rs:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          context: ./backend
          file: ./backend/dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/avocado-rs:latest

          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Sync docker-compose.yml
        run: sshpass -v -p ${{ secrets.SAKURA_PASSWORD }} scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.SAKURA_USERNAME }}@${{ secrets.SAKURA_IP_RUST }}:~

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SAKURA_IP_RUST }}
          username: ${{ secrets.SAKURA_USERNAME }}
          password: ${{ secrets.SAKURA_PASSWORD }}
          script: |
            cd ~
            docker-compose down
            docker-compose pull
            docker-compose up -d
